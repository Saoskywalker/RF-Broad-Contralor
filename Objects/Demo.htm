<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Sat Jun 01 09:33:59 2019
<BR><P>
<H3>Maximum Stack Usage =        160 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; PageO2 &rArr; WorkTimeDeal &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[69]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1f]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ADC1_2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3d]">BackFree</a> from applib.o(i.BackFree) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[3d]">BackFree</a> from applib.o(i.BackFree) referenced from applib.o(i.PageCool)
 <LI><a href="#[3d]">BackFree</a> from applib.o(i.BackFree) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[3d]">BackFree</a> from applib.o(i.BackFree) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[3d]">BackFree</a> from applib.o(i.BackFree) referenced from applib.o(i.PageO2)
 <LI><a href="#[3e]">BackPres</a> from applib.o(i.BackPres) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[3e]">BackPres</a> from applib.o(i.BackPres) referenced from applib.o(i.PageCool)
 <LI><a href="#[3e]">BackPres</a> from applib.o(i.BackPres) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[3e]">BackPres</a> from applib.o(i.BackPres) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[3e]">BackPres</a> from applib.o(i.BackPres) referenced from applib.o(i.PageO2)
 <LI><a href="#[7]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[22]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[23]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[18]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[19]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[13]">EXTI0_IRQHandler</a> from exti.o(i.EXTI0_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[35]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[14]">EXTI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[15]">EXTI2_IRQHandler</a> from exti.o(i.EXTI2_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[16]">EXTI3_IRQHandler</a> from exti.o(i.EXTI3_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[17]">EXTI4_IRQHandler</a> from exti.o(i.EXTI4_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[24]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[57]">EnterPres</a> from applib.o(i.EnterPres) referenced from applib.o(i.PageRestartAnimation)
 <LI><a href="#[48]">ExplainExitPres</a> from applib.o(i.ExplainExitPres) referenced from applib.o(i.PageExplain)
 <LI><a href="#[49]">ExplainNextFree</a> from applib.o(i.ExplainNextFree) referenced from applib.o(i.PageExplain)
 <LI><a href="#[4a]">ExplainNextPres</a> from applib.o(i.ExplainNextPres) referenced from applib.o(i.PageExplain)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2d]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2c]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2f]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2e]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[45]">IntensityDownFree</a> from applib.o(i.IntensityDownFree) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[45]">IntensityDownFree</a> from applib.o(i.IntensityDownFree) referenced from applib.o(i.PageCool)
 <LI><a href="#[45]">IntensityDownFree</a> from applib.o(i.IntensityDownFree) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[45]">IntensityDownFree</a> from applib.o(i.IntensityDownFree) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[45]">IntensityDownFree</a> from applib.o(i.IntensityDownFree) referenced from applib.o(i.PageO2)
 <LI><a href="#[46]">IntensityDownPres</a> from applib.o(i.IntensityDownPres) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[46]">IntensityDownPres</a> from applib.o(i.IntensityDownPres) referenced from applib.o(i.PageCool)
 <LI><a href="#[46]">IntensityDownPres</a> from applib.o(i.IntensityDownPres) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[46]">IntensityDownPres</a> from applib.o(i.IntensityDownPres) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[46]">IntensityDownPres</a> from applib.o(i.IntensityDownPres) referenced from applib.o(i.PageO2)
 <LI><a href="#[43]">IntensityUpFree</a> from applib.o(i.IntensityUpFree) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[43]">IntensityUpFree</a> from applib.o(i.IntensityUpFree) referenced from applib.o(i.PageCool)
 <LI><a href="#[43]">IntensityUpFree</a> from applib.o(i.IntensityUpFree) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[43]">IntensityUpFree</a> from applib.o(i.IntensityUpFree) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[43]">IntensityUpFree</a> from applib.o(i.IntensityUpFree) referenced from applib.o(i.PageO2)
 <LI><a href="#[44]">IntensityUpPres</a> from applib.o(i.IntensityUpPres) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[44]">IntensityUpPres</a> from applib.o(i.IntensityUpPres) referenced from applib.o(i.PageCool)
 <LI><a href="#[44]">IntensityUpPres</a> from applib.o(i.IntensityUpPres) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[44]">IntensityUpPres</a> from applib.o(i.IntensityUpPres) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[44]">IntensityUpPres</a> from applib.o(i.IntensityUpPres) referenced from applib.o(i.PageO2)
 <LI><a href="#[6]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[55]">ModeDownFree</a> from applib.o(i.ModeDownFree) referenced from applib.o(i.PageO2)
 <LI><a href="#[56]">ModeDownPres</a> from applib.o(i.ModeDownPres) referenced from applib.o(i.PageO2)
 <LI><a href="#[53]">ModeUpFree</a> from applib.o(i.ModeUpFree) referenced from applib.o(i.PageO2)
 <LI><a href="#[54]">ModeUpPres</a> from applib.o(i.ModeUpPres) referenced from applib.o(i.PageO2)
 <LI><a href="#[4]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[e]">PVD_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3b]">PauseFree</a> from applib.o(i.PauseFree) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[3b]">PauseFree</a> from applib.o(i.PauseFree) referenced from applib.o(i.PageCool)
 <LI><a href="#[3b]">PauseFree</a> from applib.o(i.PauseFree) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[3b]">PauseFree</a> from applib.o(i.PauseFree) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[3b]">PauseFree</a> from applib.o(i.PauseFree) referenced from applib.o(i.PageO2)
 <LI><a href="#[3c]">PausePres</a> from applib.o(i.PausePres) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[3c]">PausePres</a> from applib.o(i.PausePres) referenced from applib.o(i.PageCool)
 <LI><a href="#[3c]">PausePres</a> from applib.o(i.PausePres) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[3c]">PausePres</a> from applib.o(i.PausePres) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[3c]">PausePres</a> from applib.o(i.PausePres) referenced from applib.o(i.PageO2)
 <LI><a href="#[b]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[12]">RCC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[36]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[10]">RTC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[30]">SPI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[31]">SPI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[52]">SetPres</a> from applib.o(i.SetPres) referenced from applib.o(i.PageMenu)
 <LI><a href="#[47]">StartFree</a> from applib.o(i.StartFree) referenced from applib.o(i.PageCool)
 <LI><a href="#[3a]">StartPres</a> from applib.o(i.StartPres) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[3a]">StartPres</a> from applib.o(i.StartPres) referenced from applib.o(i.PageCool)
 <LI><a href="#[3a]">StartPres</a> from applib.o(i.StartPres) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[3a]">StartPres</a> from applib.o(i.StartPres) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[3a]">StartPres</a> from applib.o(i.StartPres) referenced from applib.o(i.PageO2)
 <LI><a href="#[c]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[38]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[f]">TAMPER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[25]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[28]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[27]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[26]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[29]">TIM2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2a]">TIM3_IRQHandler</a> from timer.o(i.TIM3_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2b]">TIM4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[41]">TimeDownFree</a> from applib.o(i.TimeDownFree) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[41]">TimeDownFree</a> from applib.o(i.TimeDownFree) referenced from applib.o(i.PageCool)
 <LI><a href="#[41]">TimeDownFree</a> from applib.o(i.TimeDownFree) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[41]">TimeDownFree</a> from applib.o(i.TimeDownFree) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[41]">TimeDownFree</a> from applib.o(i.TimeDownFree) referenced from applib.o(i.PageO2)
 <LI><a href="#[42]">TimeDownPres</a> from applib.o(i.TimeDownPres) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[42]">TimeDownPres</a> from applib.o(i.TimeDownPres) referenced from applib.o(i.PageCool)
 <LI><a href="#[42]">TimeDownPres</a> from applib.o(i.TimeDownPres) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[42]">TimeDownPres</a> from applib.o(i.TimeDownPres) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[42]">TimeDownPres</a> from applib.o(i.TimeDownPres) referenced from applib.o(i.PageO2)
 <LI><a href="#[3f]">TimeUpFree</a> from applib.o(i.TimeUpFree) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[3f]">TimeUpFree</a> from applib.o(i.TimeUpFree) referenced from applib.o(i.PageCool)
 <LI><a href="#[3f]">TimeUpFree</a> from applib.o(i.TimeUpFree) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[3f]">TimeUpFree</a> from applib.o(i.TimeUpFree) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[3f]">TimeUpFree</a> from applib.o(i.TimeUpFree) referenced from applib.o(i.PageO2)
 <LI><a href="#[40]">TimeUpPres</a> from applib.o(i.TimeUpPres) referenced from applib.o(i.PageBodyRF)
 <LI><a href="#[40]">TimeUpPres</a> from applib.o(i.TimeUpPres) referenced from applib.o(i.PageCool)
 <LI><a href="#[40]">TimeUpPres</a> from applib.o(i.TimeUpPres) referenced from applib.o(i.PageEyeRF)
 <LI><a href="#[40]">TimeUpPres</a> from applib.o(i.TimeUpPres) referenced from applib.o(i.PageFaceRF)
 <LI><a href="#[40]">TimeUpPres</a> from applib.o(i.TimeUpPres) referenced from applib.o(i.PageO2)
 <LI><a href="#[32]">USART1_IRQHandler</a> from usart.o(i.USART1_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[33]">USART2_IRQHandler</a> from usart.o(i.USART2_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[34]">USART3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[37]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[20]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[21]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[d]">WWDG_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[58]">__main</a> from __main.o(!!!main) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[50]">menuBodyRFPres</a> from applib.o(i.menuBodyRFPres) referenced from applib.o(i.PageMenu)
 <LI><a href="#[4b]">menuChinsePres</a> from applib.o(i.menuChinsePres) referenced from applib.o(i.PageLanguage)
 <LI><a href="#[4c]">menuEnglishPres</a> from applib.o(i.menuEnglishPres) referenced from applib.o(i.PageLanguage)
 <LI><a href="#[4e]">menuEyeRFPres</a> from applib.o(i.menuEyeRFPres) referenced from applib.o(i.PageMenu)
 <LI><a href="#[4f]">menuFaceRFPres</a> from applib.o(i.menuFaceRFPres) referenced from applib.o(i.PageMenu)
 <LI><a href="#[4d]">menuKoreanPres</a> from applib.o(i.menuKoreanPres) referenced from applib.o(i.PageLanguage)
 <LI><a href="#[51]">menuO2Pres</a> from applib.o(i.menuO2Pres) referenced from applib.o(i.PageMenu)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[58]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[59]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[5b]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[d7]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[d8]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[5c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[d9]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[60]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[da]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[db]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[dc]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[dd]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[de]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[df]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[e0]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[e1]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[e2]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[e3]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[e4]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[e5]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[e6]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[e7]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[e8]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[e9]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[ea]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[eb]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[ec]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[ed]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[ee]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[65]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[ef]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[f0]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[f1]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[f2]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[f3]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[f4]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[5a]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[f5]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[5d]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5f]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[f6]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[61]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; PageO2 &rArr; WorkTimeDeal &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[f7]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[6a]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[64]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[f8]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[66]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[f9]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[fb]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[63]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ff]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[100]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[6b]"></a>ADC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32f10x_adc.o(i.ADC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[76]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[88]"></a>ADC_GetConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc
</UL>

<P><STRONG><a name="[87]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc
</UL>

<P><STRONG><a name="[74]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetResetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[71]"></a>ADC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f10x_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[85]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f10x_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc
</UL>

<P><STRONG><a name="[73]"></a>ADC_ResetCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_ResetCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[86]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_SoftwareStartConvCmd))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc
</UL>

<P><STRONG><a name="[75]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_StartCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[6d]"></a>Adc_Init</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, adc.o(i.Adc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Adc_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ResetCalibration
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>BackFree</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, applib.o(i.BackFree))
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[3e]"></a>BackPres</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, applib.o(i.BackPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = BackPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[b0]"></a>BeeFunction</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, applib.o(i.BeeFunction))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, exti.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, exti.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, exti.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, exti.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>ExplainExitPres</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, applib.o(i.ExplainExitPres))
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageExplain)
</UL>
<P><STRONG><a name="[49]"></a>ExplainNextFree</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, applib.o(i.ExplainNextFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ExplainNextFree &rArr; dwDisPicWithL &rArr; dwDisPicNoL &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicWithL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageExplain)
</UL>
<P><STRONG><a name="[4a]"></a>ExplainNextPres</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, applib.o(i.ExplainNextPres))
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageExplain)
</UL>
<P><STRONG><a name="[80]"></a>FLASH_ErasePage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f10x_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[83]"></a>FLASH_GetBank1Status</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetBank1Status))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[aa]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[82]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f10x_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write_NoCheck
</UL>

<P><STRONG><a name="[a8]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[81]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[70]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[8d]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[7d]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[84]"></a>Get_Adc</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, adc.o(i.Get_Adc))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Get_Adc &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
</UL>

<P><STRONG><a name="[89]"></a>Get_Adc_Average</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, adc.o(i.Get_Adc_Average))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Get_Adc_Average &rArr; Get_Adc &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
</UL>

<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>IntensityDownFree</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, applib.o(i.IntensityDownFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = IntensityDownFree &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[46]"></a>IntensityDownPres</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, applib.o(i.IntensityDownPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = IntensityDownPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIntensity
</UL>
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[43]"></a>IntensityUpFree</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, applib.o(i.IntensityUpFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = IntensityUpFree &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[44]"></a>IntensityUpPres</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, applib.o(i.IntensityUpPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = IntensityUpPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIntensity
</UL>
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[8b]"></a>LED_Init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LED_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>MainBoardSend</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, applib.o(i.MainBoardSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MainBoardSend &rArr; uasrt1SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uasrt1SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageMenu
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageLanguage
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageFaceRF
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageEyeRF
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageBodyRF
</UL>

<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>ModeDownFree</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, applib.o(i.ModeDownFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ModeDownFree &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[56]"></a>ModeDownPres</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, applib.o(i.ModeDownPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ModeDownPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[53]"></a>ModeUpFree</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, applib.o(i.ModeUpFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ModeUpFree &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[54]"></a>ModeUpPres</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, applib.o(i.ModeUpPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ModeUpPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>NVIC_Configuration</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sys.o(i.NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[91]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[af]"></a>O2PWM</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, applib.o(i.O2PWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = O2PWM
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[92]"></a>PageBodyRF</STRONG> (Thumb, 470 bytes, Stack size 8 bytes, applib.o(i.PageBodyRF))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PageBodyRF &rArr; WorkTimeDeal &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funDisTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwWaitRelease
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwListenKey
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicWithL
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCancelKey
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorkTimeDeal
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardSend
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIntensity
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>PageCool</STRONG> (Thumb, 316 bytes, Stack size 8 bytes, applib.o(i.PageCool))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PageCool &rArr; WorkTimeDeal &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSetColor
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funDisTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwWaitRelease
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwListenKey
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicWithL
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisNum
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCancelKey
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorkTimeDeal
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardSend
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>PageExplain</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, applib.o(i.PageExplain))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PageExplain &rArr; dwDisPicWithL &rArr; dwDisPicNoL &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwWaitRelease
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwListenKey
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicWithL
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCancelKey
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>PageEyeRF</STRONG> (Thumb, 468 bytes, Stack size 8 bytes, applib.o(i.PageEyeRF))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PageEyeRF &rArr; WorkTimeDeal &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funDisTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwWaitRelease
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwListenKey
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicWithL
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCancelKey
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorkTimeDeal
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardSend
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIntensity
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>PageFaceRF</STRONG> (Thumb, 468 bytes, Stack size 8 bytes, applib.o(i.PageFaceRF))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PageFaceRF &rArr; WorkTimeDeal &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funDisTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwWaitRelease
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwListenKey
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicWithL
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCancelKey
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorkTimeDeal
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardSend
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIntensity
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>PageLanguage</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, applib.o(i.PageLanguage))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PageLanguage &rArr; dwDisChar &rArr; dwDisString &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwWaitRelease
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwListenKey
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwHandler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicNoL
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisChar
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCancelKey
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardSend
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>PageMenu</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, applib.o(i.PageMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PageMenu &rArr; dwDisPicWithL &rArr; dwDisPicNoL &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwWaitRelease
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwListenKey
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicWithL
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCancelKey
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardSend
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>PageO2</STRONG> (Thumb, 330 bytes, Stack size 8 bytes, applib.o(i.PageO2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PageO2 &rArr; WorkTimeDeal &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funDisTime
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwWaitRelease
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwListenKey
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicWithL
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCancelKey
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorkTimeDeal
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemperatureProcess
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardSend
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMode
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIntensity
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>PageRestartAnimation</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, applib.o(i.PageRestartAnimation))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PageRestartAnimation &rArr; dwDisPicNoL &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwWaitRelease
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwListenKey
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwHandler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicNoL
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCancelKey
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>PauseFree</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, applib.o(i.PauseFree))
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[3c]"></a>PausePres</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, applib.o(i.PausePres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = PausePres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_ADCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
</UL>

<P><STRONG><a name="[b2]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[c0]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[6e]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[6c]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[c2]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[a5]"></a>STMFLASH_Read</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stmflash.o(i.STMFLASH_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = STMFLASH_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_ReadHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[a6]"></a>STMFLASH_ReadHalfWord</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stmflash.o(i.STMFLASH_ReadHalfWord))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
</UL>

<P><STRONG><a name="[a7]"></a>STMFLASH_Write</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, stmflash.o(i.STMFLASH_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write_NoCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuKoreanPres
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuEnglishPres
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuChinsePres
</UL>

<P><STRONG><a name="[a9]"></a>STMFLASH_Write_NoCheck</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, stmflash.o(i.STMFLASH_Write_NoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>SetPres</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, applib.o(i.SetPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SetPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageMenu)
</UL>
<P><STRONG><a name="[47]"></a>StartFree</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, applib.o(i.StartFree))
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageCool)
</UL>
<P><STRONG><a name="[3a]"></a>StartPres</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, applib.o(i.StartPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = StartPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[c4]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>TIM3_IRQHandler</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, timer.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2PWM
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeeFunction
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[b1]"></a>TIM3_Int_Init</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, timer.o(i.TIM3_Int_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM3_Int_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>TIM4_PWM_Init</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, timer.o(i.TIM4_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIM4_PWM_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_Init
</UL>

<P><STRONG><a name="[ae]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[b6]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[ad]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[b8]"></a>TIM_OC3Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_Init
</UL>

<P><STRONG><a name="[b9]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_Init
</UL>

<P><STRONG><a name="[9b]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCompare3))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[a3]"></a>TemperatureProcess</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, applib.o(i.TemperatureProcess))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
</UL>

<P><STRONG><a name="[41]"></a>TimeDownFree</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, applib.o(i.TimeDownFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TimeDownFree &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[42]"></a>TimeDownPres</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, applib.o(i.TimeDownPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TimeDownPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funDisTime
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[3f]"></a>TimeUpFree</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, applib.o(i.TimeUpFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TimeUpFree &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[40]"></a>TimeUpPres</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, applib.o(i.TimeUpPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TimeUpPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funDisTime
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 5]<UL><LI> applib.o(i.PageBodyRF)
<LI> applib.o(i.PageCool)
<LI> applib.o(i.PageEyeRF)
<LI> applib.o(i.PageFaceRF)
<LI> applib.o(i.PageO2)
</UL>
<P><STRONG><a name="[32]"></a>USART1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;commRx1Handler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART2_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usart.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwReceiveByte
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[d4]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[bf]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[d5]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uasrt2SendByte
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uasrt1SendByte
</UL>

<P><STRONG><a name="[bb]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[d3]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[c1]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[bc]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[d6]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uasrt2SendByte
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uasrt1SendByte
</UL>

<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>WorkTimeDeal</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, applib.o(i.WorkTimeDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WorkTimeDeal &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funDisTime
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageFaceRF
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageEyeRF
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageBodyRF
</UL>

<P><STRONG><a name="[67]"></a>_sys_exit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usart.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[bd]"></a>commRx1Handler</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, applib.o(i.commRx1Handler))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[c3]"></a>delay_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, delay.o(i.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>delay_ms</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, delay.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenCheck
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>delay_us</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, delay.o(i.delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
</UL>

<P><STRONG><a name="[94]"></a>dwCancelKey</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dwdriver.o(i.dwCancelKey))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageRestartAnimation
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageMenu
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageLanguage
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageFaceRF
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageEyeRF
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageExplain
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageBodyRF
</UL>

<P><STRONG><a name="[cb]"></a>dwConvertLocation</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, dwdriver.o(i.dwConvertLocation))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwGetKey
</UL>

<P><STRONG><a name="[c5]"></a>dwCutPic</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, dwdriver.o(i.dwCutPic))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendOver
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCutPicL
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>

<P><STRONG><a name="[c8]"></a>dwCutPicL</STRONG> (Thumb, 46 bytes, Stack size 48 bytes, dwdriver.o(i.dwCutPicL))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCutPic
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>

<P><STRONG><a name="[77]"></a>dwDisButton</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, dwdriver.o(i.dwDisButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCutPicL
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCutPic
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageFaceRF
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageEyeRF
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageBodyRF
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuO2Pres
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuFaceRFPres
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuEyeRFPres
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuBodyRFPres
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorkTimeDeal
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeUpPres
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeUpFree
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDownPres
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDownFree
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartPres
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPres
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PausePres
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUpPres
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUpFree
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeDownPres
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeDownFree
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntensityUpPres
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntensityUpFree
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntensityDownPres
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntensityDownFree
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackPres
</UL>

<P><STRONG><a name="[7b]"></a>dwDisChar</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dwdriver.o(i.dwDisChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dwDisChar &rArr; dwDisString &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisString
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageLanguage
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funDisTime
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMode
</UL>

<P><STRONG><a name="[79]"></a>dwDisNum</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, dwdriver.o(i.dwDisNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dwDisNum &rArr; dwDisString &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisString
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;funDisTime
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayIntensity
</UL>

<P><STRONG><a name="[a0]"></a>dwDisPicNoL</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dwdriver.o(i.dwDisPicNoL))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dwDisPicNoL &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendOver
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageRestartAnimation
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageLanguage
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicWithL
</UL>

<P><STRONG><a name="[7f]"></a>dwDisPicWithL</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dwdriver.o(i.dwDisPicWithL))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dwDisPicWithL &rArr; dwDisPicNoL &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicNoL
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageMenu
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageFaceRF
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageEyeRF
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageExplain
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageBodyRF
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExplainNextFree
</UL>

<P><STRONG><a name="[c9]"></a>dwDisString</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, dwdriver.o(i.dwDisString))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dwDisString &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendOver
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisNum
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisChar
</UL>

<P><STRONG><a name="[ca]"></a>dwGetKey</STRONG> (Thumb, 118 bytes, Stack size 4 bytes, dwdriver.o(i.dwGetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dwGetKey
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwConvertLocation
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwHandler
</UL>

<P><STRONG><a name="[96]"></a>dwHandler</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, dwdriver.o(i.dwHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dwHandler &rArr; dwGetKey
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwQueryCmd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwGetKey
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageRestartAnimation
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageMenu
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageLanguage
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageFaceRF
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageEyeRF
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageExplain
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageBodyRF
</UL>

<P><STRONG><a name="[95]"></a>dwListenKey</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, dwdriver.o(i.dwListenKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dwListenKey
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageRestartAnimation
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageMenu
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageLanguage
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageFaceRF
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageEyeRF
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageExplain
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageBodyRF
</UL>

<P><STRONG><a name="[cd]"></a>dwPlayVol</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dwdriver.o(i.dwPlayVol))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dwPlayVol &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendOver
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cc]"></a>dwQueryCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dwdriver.o(i.dwQueryCmd))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenCheck
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwHandler
</UL>

<P><STRONG><a name="[be]"></a>dwReceiveByte</STRONG> (Thumb, 286 bytes, Stack size 0 bytes, dwdriver.o(i.dwReceiveByte))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[c6]"></a>dwSendByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dwdriver.o(i.dwSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uasrt2SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSetColor
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendOver
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwPlayVol
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenCheck
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisString
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCutPic
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicNoL
</UL>

<P><STRONG><a name="[c7]"></a>dwSendOver</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dwdriver.o(i.dwSendOver))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSetColor
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwPlayVol
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenCheck
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisString
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwCutPic
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisPicNoL
</UL>

<P><STRONG><a name="[9a]"></a>dwSetColor</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, dwdriver.o(i.dwSetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dwSetColor &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendOver
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>dwSetLanguage</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dwdriver.o(i.dwSetLanguage))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuKoreanPres
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuEnglishPres
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menuChinsePres
</UL>

<P><STRONG><a name="[98]"></a>dwWaitRelease</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dwdriver.o(i.dwWaitRelease))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageRestartAnimation
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageMenu
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageLanguage
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageFaceRF
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageEyeRF
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageExplain
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageBodyRF
</UL>

<P><STRONG><a name="[93]"></a>funDisTime</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, dwdriver.o(i.funDisTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = funDisTime &rArr; dwDisNum &rArr; dwDisString &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisNum
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisChar
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageFaceRF
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageEyeRF
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageBodyRF
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WorkTimeDeal
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeUpPres
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDownPres
</UL>

<P><STRONG><a name="[62]"></a>main</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = main &rArr; PageO2 &rArr; WorkTimeDeal &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSetLanguage
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSetColor
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwPlayVol
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_PWM_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageRestartAnimation
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageMenu
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageLanguage
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageFaceRF
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageEyeRF
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageExplain
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageCool
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageBodyRF
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenCheck
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[50]"></a>menuBodyRFPres</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, applib.o(i.menuBodyRFPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = menuBodyRFPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageMenu)
</UL>
<P><STRONG><a name="[4b]"></a>menuChinsePres</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, applib.o(i.menuChinsePres))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = menuChinsePres &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSetLanguage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageLanguage)
</UL>
<P><STRONG><a name="[4c]"></a>menuEnglishPres</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, applib.o(i.menuEnglishPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = menuEnglishPres &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSetLanguage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageLanguage)
</UL>
<P><STRONG><a name="[4e]"></a>menuEyeRFPres</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, applib.o(i.menuEyeRFPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = menuEyeRFPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageMenu)
</UL>
<P><STRONG><a name="[4f]"></a>menuFaceRFPres</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, applib.o(i.menuFaceRFPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = menuFaceRFPres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageMenu)
</UL>
<P><STRONG><a name="[4d]"></a>menuKoreanPres</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, applib.o(i.menuKoreanPres))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = menuKoreanPres &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSetLanguage
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageLanguage)
</UL>
<P><STRONG><a name="[51]"></a>menuO2Pres</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, applib.o(i.menuO2Pres))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = menuO2Pres &rArr; dwDisButton &rArr; dwCutPicL &rArr; dwCutPic &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisButton
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageMenu)
</UL>
<P><STRONG><a name="[d1]"></a>screenCheck</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(i.screenCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = screenCheck &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendOver
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendByte
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwQueryCmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0]"></a>uart2_init</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, usart.o(i.uart2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = uart2_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>uart_init</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, usart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = uart_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>uasrt1SendByte</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usart.o(i.uasrt1SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uasrt1SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainBoardSend
</UL>

<P><STRONG><a name="[ce]"></a>uasrt2SendByte</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usart.o(i.uasrt2SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwSendByte
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ab]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[ac]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[78]"></a>DisplayIntensity</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, applib.o(i.DisplayIntensity))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DisplayIntensity &rArr; dwDisNum &rArr; dwDisString &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisNum
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageFaceRF
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageEyeRF
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageBodyRF
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntensityUpPres
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntensityDownPres
</UL>

<P><STRONG><a name="[7a]"></a>DisplayMode</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, applib.o(i.DisplayMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DisplayMode &rArr; dwDisChar &rArr; dwDisString &rArr; dwSendOver &rArr; dwSendByte &rArr; uasrt2SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dwDisChar
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageO2
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeUpPres
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModeDownPres
</UL>

<P><STRONG><a name="[57]"></a>EnterPres</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, applib.o(i.EnterPres))
<BR>[Address Reference Count : 1]<UL><LI> applib.o(i.PageRestartAnimation)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
